-- Generated by TypescriptToLua v0.1.6
-- https://github.com/Perryvw/TypescriptToLua
require("typescript_lualib")
local exports = exports or {}
local Reflection.js0 = require(".fable.fable-library.3.1.16.Reflection.js")
local string_type = Reflection.js0.string_type
local int32_type = Reflection.js0.int32_type
local union_type = Reflection.js0.union_type
local TypeInfo = Reflection.js0.TypeInfo
local Union = Union or {}
exports.Union = Union
Union.__index = Union
function Union.new(construct, ...)
    local instance = setmetatable({}, Union)
    if construct and Union.constructor then Union.constructor(instance, ...) end
    return instance
end
function Union.constructor(self)
end
local Classes_Mage = Classes_Mage or Union.new()
exports.Classes_Mage = Classes_Mage
Classes_Mage.__index = Classes_Mage
Classes_Mage.__base = Union
function Classes_Mage.new(construct, ...)
    local instance = setmetatable({}, Classes_Mage)
    if construct and Classes_Mage.constructor then Classes_Mage.constructor(instance, ...) end
    return instance
end
function Classes_Mage.constructor(self,tag,fields)
    self.__base.constructor(self)
    self.tag=(bit.bor(tag,0))
    self.fields=fields
end
function Classes_Mage.cases(self)
    return {"Arcane","Fire","Frost"}
end
return exports
